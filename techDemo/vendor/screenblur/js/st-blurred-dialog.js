angular.module("stBlurredDialog",[]).constant("stBlurredDialogClasses",{blurredRegion:"st-blurred-region"}).factory("stBlurredDialog",["$timeout",function(e){var n={subscribers:[],isOpen:!1,dialogData:null};return{open:function(r,o){e(function(){$("body").css("overflow","hidden"),n.dialogData=o,n.isOpen=!0,angular.forEach(n.subscribers,function(e){e(n.isOpen,r)})})},close:function(){e(function(){$("body").css("overflow","auto"),n.isOpen=!1,angular.forEach(n.subscribers,function(e){e(n.isOpen)})})},isOpen:function(){return n.isOpen},getDialogData:function(){return n.dialogData},subscribe:function(e){n.subscribers.push(e)}}}]).directive("stBlurredDialogRegion",[function(){return{restrict:"A",scope:{},controller:["$scope","stBlurredDialog","$element","stBlurredDialogClasses",function(e,n,r,o){n.subscribe(function(e){e?r.addClass(o.blurredRegion):r.removeClass(o.blurredRegion)})}],link:function(){}}}]).directive("stBlurredDialogOverlay",[function(){return{restrict:"E",scope:{},replace:!0,template:"<div ng-if='model.isOpen' class='st-blurred-region-overlay'><div ng-include src='model.pathToTemplate'></p></div>",controller:["$scope","stBlurredDialog","$element",function(e,n){e.model={isOpen:!1,pathToTemplate:null},n.subscribe(function(n,r){e.model.isOpen=n,e.model.pathToTemplate=r}),e.close=function(){n.close()}}],link:function(){}}}]);